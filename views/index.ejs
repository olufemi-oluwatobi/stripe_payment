<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>i360Stripe</title>
    <link rel="stylesheet" href="https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css" />
</head>

<body class="flex h-screen">
    <div class="w-full max-w-xs m-auto bg-indigo-100 rounded p-5">
        <header>
            <span id="error_message" class="w-full --2 mb-6 border-b-2">
                <%= error %>
            </span>
        </header>
        <form action="/login" method="POST" id="form1">
            <div>
                <label class=" block mb-2 text-indigo-500" for="password">username</label>
                <input required
                    class="w-full p-2 mb-6 text-indigo-700 border-b-2 border-indigo-500 outline-none focus:bg-gray-300"
                    type="username" name="username" id="username">
                <span hidden name="username" id="username_error" class="text-xs text-red-500">username is
                    required</span>
            </div>
            <div>
                <label class=" block mb-2 text-indigo-500" for="password">Password</label>
                <input required
                    class="w-full p-2 mb-6 text-indigo-700 border-b-2 border-indigo-500 outline-none focus:bg-gray-300"
                    type="password" name="password" id="password">
                <span hidden name="username" id="username_error" class="text-xs text-red-500">username is
                    required</span>
            </div>
            <div>
                <button class="w-full bg-indigo-700 hover:bg-pink-700 text-white font-bold py-2 px-4 mb-6 rounded"
                    type="submit">Login</button>
            </div>
        </form>
    </div>
</body>
<script>

    const toggleDisplay = (id, isHidden) => {
        document.getElementById(id).hidden = isHidden
    }

    const password = document.getElementById("username")
    const username = document.getElementById("password")
    console.log(username)
    password.addEventListener(("blur"), () => {
        if (password.innerHTML.length < 2) {
            toggleDisplay("password_error", true)

        } else {
            toggleDisplay("password_error", false)
        }
    })


    username.addEventListener(("blur"), () => {
        if (password.innerHTML.length < 2) {
            toggleDisplay("username_error", true)

        } else {
            toggleDisplay("username_error", false)
        }
    })


    const onSubmit = () => {
        console.log("in heree ejdnj")
        const password = document.getElementById("username")
        const username = document.getElementById("password")
        const empty = []
        let status
        if (password.innerHTML.length < 2) {

            empty.push("password")
            toggleDisplay("username_error", true)

        }
        if (username.innerHTML.length < 1) {
            empty.push("username")
            toggleDisplay("username_error", true)
        }
        if (!empty.length) {
            toggleDisplay("password_error", false)
            toggleDisplay("username_error", false)
            const data = {
                password: password.innerText,
                username: username.innerText
            }

            return fetch("/login", {
                mode: 'cors', // no-cors, *cors, same-origin
                cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
                credentials: 'same-origin', // include, *same-origin, omit
                headers: {
                    'Content-Type': 'application/json'
                    // 'Content-Type': 'application/x-www-form-urlencoded',
                },
                redirect: 'follow', // manual, *follow, error
                referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
                body: JSON.stringify(data), method: "POST",
            }).then(res => {
                status = res.status
                return res.json()
            }).then(tes => {
                if (status !== 200) {
                    document.getElementById("error_message").innerHTML = "Invalid Credentials"
                } else {
                    window.open("/payment")
                }

            }).catch(error => {
                console.log(error)
                document.getElementById("error_message").innerHTML = "Network Error"
            })
        }
    }


</script>

</html>